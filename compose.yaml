services:

  php-web:
    build: .docker/frankenphp
    container_name: php-web
    # uncomment the following line if you want to use a custom Dockerfile
    #build: .
    # uncomment the following line if you want to run this in a production environment
    # restart: always
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "443:443/udp" # HTTP/3
    volumes:
      - $PWD:/var/www/farmer
      - caddy_data:/data
      - caddy_config:/config
    environment:
      APP_ENV: 'dev'
      SERVER_NAME: 'farmer.local'
      APP_RUNTIME: 'Runtime\FrankenPhpSymfony\Runtime'
      FRANKENPHP_CONFIG: 'worker ./public/index.php'
    # comment the following line in production, it allows to have nice human-readable logs in dev
    tty: true
    networks:
      farmer-network:
        ipv4_address: 10.100.200.7

  php-cli:
    build: .docker/cli-php
    container_name: php-cli
    working_dir: /var/www
    command: /bin/true
    networks:
      farmer-network:
        ipv4_address: 10.100.200.4
    volumes:
      - .:/var/www:cached

  postgres:
    image: postgres:17.1-alpine3.20
    container_name: postgres
    volumes:
      - "./volumes/postgres:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=farmer_user
      - POSTGRES_PASSWORD=farmer_password
      - POSTGRES_DB=farmer_db
    user: 1000:1000
    ports:
      - "5432:5432"
    networks:
      farmer-network:
        ipv4_address: 10.100.200.6

volumes:
  caddy_data:
  caddy_config:

networks:
  farmer-network:
    name: farmer
    ipam:
      driver: default
      config:
        - subnet: 10.100.200.0/28
